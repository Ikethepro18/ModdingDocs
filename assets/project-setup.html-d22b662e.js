import{_ as r,M as p,p as c,q as l,R as e,t as n,N as s,V as t,a1 as a}from"./framework-5866ffd3.js";const u="/ModdingDocs/images/mod_ico.png",d={},k=a('<h1 id="project-setup" tabindex="-1"><a class="header-anchor" href="#project-setup" aria-hidden="true">#</a> Project Setup</h1><h2 id="the-premium-cache-folder" tabindex="-1"><a class="header-anchor" href="#the-premium-cache-folder" aria-hidden="true">#</a> The premium_cache folder</h2><p>The <code>premium_cache</code> folder is where we will create our mods. You should create a shortcut to the <code>premium_cache</code> folder on your Desktop, so you can easily access it at any time.</p><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> Windows</h3><p><em>Tip: You can type %appdata% into the searchbar to jump directly into the &#39;C:\\Users&lt;USERNAME&gt;\\AppData&#39; folder.</em></p><p><code>C:\\Users\\&lt;USERNAME&gt;\\AppData\\Roaming\\Minecraft Legends\\internalStorage\\premium_cache</code></p><h2 id="your-workspace" tabindex="-1"><a class="header-anchor" href="#your-workspace" aria-hidden="true">#</a> Your Workspace</h2><p>First of all, you will need to create the proper folders in suitable locations and set up your workspace. <em>The remainder of this guide assumes you are using VSCode. You may also follow along with other editors.</em></p><p>Let&#39;s create your first mod workspace in Visual Studio Code now.</p><ol><li>Open VSCode (<em>Visual Studio Code, the code editor</em>)</li><li>Create a folder named &quot;<code>your_pack_name_RP</code>&quot; in <code>resource_packs</code>. <strong>This guide will refer to this folder as <code>RP</code></strong></li><li>Create a folder &quot;<code>your_pack_name_BP</code>&quot; in <code>behavior_packs</code>. <strong>This guide will refer to this folder as <code>BP</code></strong>.</li><li>Go to <code>File &gt; Add folder to workspace...</code> and choose <code>BP</code>. Do the same with <code>RP</code>.</li><li>Press <code>File &gt; Save Workspace as...</code> to save the workspace file to your Desktop. Whenever you&#39;re working on your mod, all you have to do is open the workspace by double-clicking, and you will get quick access to both BP and RP folders.</li></ol><h2 id="bp-manifest" tabindex="-1"><a class="header-anchor" href="#bp-manifest" aria-hidden="true">#</a> BP Manifest</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>In this guide, you will often be instructed to create files with specific names, placed in specific folders. If the folder doesn&#39;t exist yet, please create it!</p></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Wrongly named files/folders is a common source of errors. Please check your work carefully against the examples.</p></div><p>The manifest is a file that identifies your pack to Minecraft. Every pack has one manifest. A folder with a correctly formatted manifest will show up in Minecraft, and we consider this the &quot;minimal&quot; pack before we can add additional content.</p>',14),h=e("code",null,"json",-1),m={href:"https://wiki.bedrock.dev/guide/understanding-json.html",target:"_blank",rel:"noopener noreferrer"},v=e("p",null,[n("First, create a new file in your BP folder by right-clicking on the folder and selecting "),e("code",null,"New File"),n(". Call the file "),e("code",null,"manifest.json"),n(". To begin, you can copy paste the following code into the file.")],-1),f=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;format_version&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;header&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pack.name&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pack.description&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;min_engine_version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;modules&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manifest-explained" tabindex="-1"><a class="header-anchor" href="#manifest-explained" aria-hidden="true">#</a> Manifest Explained</h3>`,2),g=e("li",null,[e("p",null,[n('"'),e("code",null,"format_version"),n('" defines what version of manifest syntax you are using. Version 2 is the most recent stable version; use it.')])],-1),b=e("code",null,"name",-1),_=e("code",null,"description",-1),q={href:"https://wiki.bedrock.dev/concepts/text-and-translations.html",target:"_blank",rel:"noopener noreferrer"},y=a("<li><p>The &quot;<code>UUID</code>&quot; field is <strong>essential</strong>, and will be discussed in more detail below.</p></li><li><p>&quot;<code>version</code>&quot; defines the version of your mod. When you import an mod with a newer version on a device with an older version installed, the more recent version will overwrite the older one.</p></li><li><p>&quot;<code>min_engine_version</code>&quot; defines the minimum Minecraft client version that&#39;ll be able to read your mod.</p></li><li><p>In &quot;<code>modules</code>&quot;, the &quot;<code>type</code>&quot; is defined to be &quot;<code>data</code>&quot;. This makes your pack a <em>Behavior Pack</em>.</p></li>",4),w=e("h3",{id:"uuid-explained",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#uuid-explained","aria-hidden":"true"},"#"),n(" UUID Explained")],-1),j=e("p",null,[n("A UUID ("),e("em",null,"Universally Unique Identifier"),n(") identifies your pack for other programs (in this case, Minecraft) to read. It looks something like this: "),e("code",null,"5c830391-0937-44d6-9774-406de66b6984")],-1),x=e("strong",null,"NEVER USE THE SAME UUID TWICE.",-1),P={href:"https://www.uuidgenerator.net/version4",target:"_blank",rel:"noopener noreferrer"},U={href:"https://marketplace.visualstudio.com/items?itemName=netcorext.uuid-generator",target:"_blank",rel:"noopener noreferrer"},M=e("em",null,"bridge.",-1),R=a('<p>To ensure that your mod will work correctly you should generate two new UUID&#39;s which you will paste into the BP <code>manifest.json</code> file, at each <code>&quot;...&quot;</code>. When you are finished, it should look something like this:</p><p><code>&quot;uuid&quot;: &quot;5c830391-0937-44d6-9774-406de66b6984&quot;</code></p><h2 id="rp-manifest" tabindex="-1"><a class="header-anchor" href="#rp-manifest" aria-hidden="true">#</a> RP Manifest</h2><p>The next step is to create the <code>manifest.json</code> for the RP. The format for a resource-pack manifest is nearly identical to a BP manifests except that the <code>type</code> is <code>resources</code>, which marks the pack as a <em>Resource Pack</em>.</p><p>Copy the following code into your newly created <code>RP/manifest.json</code> and insert your own UUIDs.</p>',5),I=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;format_version&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;header&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pack.name&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pack.description&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;min_engine_version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;modules&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;resources&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registering-your-mod" tabindex="-1"><a class="header-anchor" href="#registering-your-mod" aria-hidden="true">#</a> Registering Your Mod</h2><p>In order for Legends to detect your mod, you need to register your mod&#39;s UUID in the <code>valid_known_packs.json</code> file. If you don&#39;t have a <code>valid_known_packs.json</code>, create one.</p><h3 id="where-to-find-valid-known-packs-json" tabindex="-1"><a class="header-anchor" href="#where-to-find-valid-known-packs-json" aria-hidden="true">#</a> Where to find valid_known_packs.json</h3><ul><li>Microsoft Store: <code>%APPDATA%\\Minecraft Legends\\games\\com.mojang\\minecraftpe\\valid_known_packs.json</code></li><li>Steam: <code>%APPDATA%\\Minecraft Legends\\&lt;some numbers here for Steam&gt;\\games\\com.mojang\\minecraftpe\\valid_known_packs.json</code></li></ul><p>This is what your <code>valid_known_packs.json</code> should look like, remember to use the UUID you defined in your <code>manifest.json</code></p>`,6),S=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;file_version&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token punctuation">{</span>
        <span class="token property">&quot;file_system&quot;</span><span class="token operator">:</span> <span class="token string">&quot;RawPath&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;C:/Users/&lt;USERNAME&gt;/AppData/Roaming/Minecraft Legends/internalStorage/premium_cache/resource_packs/your_pack_name_RP&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token punctuation">{</span>
        <span class="token property">&quot;file_system&quot;</span><span class="token operator">:</span> <span class="token string">&quot;RawPath&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;C:/Users/&lt;USERNAME&gt;/AppData/Roaming/Minecraft Legends/internalStorage/premium_cache/behavior_packs/your_pack_name_BP&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pack-icon" tabindex="-1"><a class="header-anchor" href="#pack-icon" aria-hidden="true">#</a> Pack Icon</h2><p>The pack icon is an image file which identifies how your mod will look in-game. If you have a low-resolution square image, you can use it. Otherwise, download and use this example icon:</p><p><img src="`+u+'" alt=""></p><p>You should place a copy of your desired image into <code>RP/dlc_data</code>. The image needs to be named <code>icon.jpg</code></p><h2 id="language-files" tabindex="-1"><a class="header-anchor" href="#language-files" aria-hidden="true">#</a> Language Files</h2>',6),T={href:"https://wiki.bedrock.dev/concepts/text-and-translations.html",target:"_blank",rel:"noopener noreferrer"},E=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>pack.name=Wiki Resource Pack
pack.description=A Mythical Guide
wiki.title=Wiki Mod Example
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>pack.name=Wiki Behavior Pack
pack.description=A Mythical Guide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),D=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token string">&quot;en_US&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),B=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token string">&quot;en_US&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="checking-your-work" tabindex="-1"><a class="header-anchor" href="#checking-your-work" aria-hidden="true">#</a> Checking your Work</h2><p>If you have done everything correctly, your mod should show up in Minecraft now! Go to Lost Legends &amp; Myths -&gt; My Myths and it should be there!</p>`,3);function C(W,N){const i=p("ExternalLinkIcon"),o=p("CodeHeader");return c(),l("div",null,[k,e("p",null,[n("Manifest files are written in "),h,n(". If this isn't familiar to you, you can learn more about json "),e("a",m,[n("here"),s(i)]),n(" from the Bedrock Wiki.")]),v,s(o,null,{default:t(()=>[n("BP/manifest.json")]),_:1}),f,e("ul",null,[g,e("li",null,[e("p",null,[n('"'),b,n('" is the name of your behavior pack. "'),_,n('" will show up under it in-game. We are defining these files in "code form" so we can translate them later into other languages. For more information about localization, look '),e("a",q,[n("here"),s(i)]),n(" from the Bedrock Wiki.")])]),y]),w,j,e("p",null,[x,n(" You can generate your own UUIDs "),e("a",P,[n("here"),s(i)]),n(" or, if you use VSCode, you can install "),e("a",U,[n("this"),s(i)]),n(" extension. Many other tools like "),M,n(" generate UUIDS automatically. Every manifest file uses two different UUIDs.")]),R,s(o,null,{default:t(()=>[n("RP/manifest.json")]),_:1}),I,s(o,null,{default:t(()=>[n("valid_known_packs.json")]),_:1}),S,e("p",null,[n("The last thing to do is setup language support for your mod. You will need to create a language file for the RP. You can learn more about how Minecraft handles localization "),e("a",T,[n("here"),s(i)]),n(" from the Bedrock Wiki.")]),s(o,null,{default:t(()=>[n("RP/texts/en_US.lang")]),_:1}),E,s(o,null,{default:t(()=>[n("BP/texts/en_US.lang")]),_:1}),A,s(o,null,{default:t(()=>[n("RP/texts/languages.json")]),_:1}),D,s(o,null,{default:t(()=>[n("BP/texts/languages.json")]),_:1}),B])}const V=r(d,[["render",C],["__file","project-setup.html.vue"]]);export{V as default};
