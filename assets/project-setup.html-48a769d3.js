import{_ as l,M as c,p,q as d,N as a,V as t,t as n,R as e,Q as r,a1 as s}from"./framework-5866ffd3.js";const u={},h=s('<h1 id="project-setup" tabindex="-1"><a class="header-anchor" href="#project-setup" aria-hidden="true">#</a> Project Setup</h1><h2 id="the-com-mojang-folder" tabindex="-1"><a class="header-anchor" href="#the-com-mojang-folder" aria-hidden="true">#</a> The com.mojang folder</h2><p>The <code>com.mojang</code> folder is a special folder where Minecraft stores data (Addons, Worlds, Player info...). Minecraft understands this location, and all files we access or create will be placed somewhere in this folder!</p><p>You should create a shortcut to the <code>com.mojang</code> folder on your Desktop or on your mobile device, so you can easily access it at any time. The exact location of the <code>com.mojang</code> folder will depend on your device OS.</p><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows" aria-hidden="true">#</a> Windows</h3><p><em>Tip: You can type %appdata% into the searchbar to jump directly into the &#39;C:\\Users\\USERNAME\\AppData&#39; folder.</em></p><p><code>C:\\Users\\USERNAME\\AppData\\Local\\Packages\\Microsoft.MinecraftUWP_8wekyb3d8bbwe\\LocalState\\games\\com.mojang</code></p><h3 id="android" tabindex="-1"><a class="header-anchor" href="#android" aria-hidden="true">#</a> Android</h3><p>Android 11 or older: <code>Phone &gt; games &gt; com.mojang</code></p><p>Android 12 and newer: <code>Phone &gt; Android &gt; data &gt; com.mojang.minecraftpe &gt; files &gt; games &gt; com.mojang</code></p><h3 id="ios" tabindex="-1"><a class="header-anchor" href="#ios" aria-hidden="true">#</a> iOS</h3><p><code>My iDevice &gt; Minecraft &gt; games &gt; com.mojang</code></p><h3 id="development-packs" tabindex="-1"><a class="header-anchor" href="#development-packs" aria-hidden="true">#</a> Development Packs</h3><p>We will develop our addon in <code>development_behavior_packs</code> and <code>development_resource_packs</code>. When you make changes within these folders, you can <em>exit and re-enter a world with the packs applied</em>, to automatically reload the content. This allows you to quickly test your addon without reloading Minecraft.</p><p><code>resource_packs</code> and <code>behavior_packs</code> on the other hand contain stable addons, including those imported via <code>.mcpack</code>. We can ignore these folders for now.</p><h2 id="your-workspace" tabindex="-1"><a class="header-anchor" href="#your-workspace" aria-hidden="true">#</a> Your Workspace</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Project setup is different for android and other platforms. Consider looking into our guide for android platforms.</p></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>In this guide, BP refers to the folder you created in <code>development_behavior_packs</code> (&quot;the behavior pack&quot;), and RP refers to the folder you created in <code>development_resource_packs</code> (&quot;the resource pack&quot;)</p></div><p>First of all, you will need to create the proper folders in suitable locations and set up your workspace. <em>The remainder of this guide assumes you are using VSCode. You may also follow along with other editors.</em></p><p>Let&#39;s create your first add-on workspace in Visual Studio Code now.</p><ol><li>Open VSCode (<em>Visual Studio Code, the code editor</em>)</li><li>Create a folder named &quot;<code>your_pack_name_RP</code>&quot; in <code>development_resource_packs</code>. <strong>I&#39;ll refer to this folder as <code>RP</code></strong></li><li>Create a folder &quot;<code>your_pack_name_BP</code>&quot; in <code>development_behavior_packs</code>. <strong>I&#39;ll refer to this folder as <code>BP</code></strong>.</li><li>Go to <code>File &gt; Add folder to workspace...</code> and choose <code>BP</code>. Do the same with <code>RP</code>.</li><li>Press <code>File &gt; Save Workspace as...</code> to save the workspace file to your Desktop. Whenever you&#39;re working on your addon, all you have to do is open the workspace by double-clicking, and you will get quick access to both BP and RP folders.</li></ol><h2 id="bp-manifest" tabindex="-1"><a class="header-anchor" href="#bp-manifest" aria-hidden="true">#</a> BP Manifest</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>In this guide, you will often be instructed to create files with specific names, placed in specific folders. If the folder doesn&#39;t exist yet, please create it!</p></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Wrongly named files/folders is a common source of errors. Please check your work carefully against the examples.</p></div><p>The manifest is a file that identifies your pack to Minecraft. Every pack has one manifest. A folder with a correctly formatted manifest will show up in Minecraft, and we consider this the &quot;minimal&quot; pack before we can add additional content.</p><p>Manifest files are written in <code>json</code>. If this isn&#39;t familiar to you, you can learn more about json <a href="./understanding-json">here</a>.</p><p>First, create a new file in your BP folder by right-clicking on the folder and selecting <code>New File</code>. Call the file <code>manifest.json</code>. To begin, you can copy paste the following code into the file.</p>',27),m=s(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;format_version&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;header&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pack.name&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pack.description&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;min_engine_version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;modules&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manifest-explained" tabindex="-1"><a class="header-anchor" href="#manifest-explained" aria-hidden="true">#</a> Manifest Explained</h3>`,2),k=e("li",null,[e("p",null,[n('"'),e("code",null,"format_version"),n('" defines what version of manifest syntax you are using. Version 2 is the most recent stable version; use it.')])],-1),g=e("code",null,"name",-1),f=e("code",null,"description",-1),v={href:"/concepts/text-and-translations",target:"_blank",rel:"noopener noreferrer"},b=s("<li><p>The &quot;<code>UUID</code>&quot; field is <strong>essential</strong>, and will be discussed in more detail below.</p></li><li><p>&quot;<code>version</code>&quot; defines the version of your add-on. When you import an add-on with a newer version on a device with an older version installed, the more recent version will overwrite the older one. You don&#39;t need to change the version if you have the add-on in <code>development_*_packs</code> folders and only use them on private worlds.</p></li><li><p>&quot;<code>min_engine_version</code>&quot; defines the minimum Minecraft client version that&#39;ll be able to read your add-on.</p></li><li><p>In &quot;<code>modules</code>&quot;, the &quot;<code>type</code>&quot; is defined to be &quot;<code>data</code>&quot;. This makes your pack a <em>Behavior Pack</em>.</p></li>",4),y=e("h3",{id:"uuid-explained",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#uuid-explained","aria-hidden":"true"},"#"),n(" UUID Explained")],-1),_=e("p",null,[n("A UUID ("),e("em",null,"Universally Unique Identifier"),n(") identifies your pack for other programs (in this case, Minecraft) to read. It looks something like this: "),e("code",null,"5c830391-0937-44d6-9774-406de66b6984")],-1),w=e("strong",null,"NEVER USE THE SAME UUID TWICE.",-1),q={href:"https://www.uuidgenerator.net/version4",target:"_blank",rel:"noopener noreferrer"},j={href:"https://marketplace.visualstudio.com/items?itemName=netcorext.uuid-generator",target:"_blank",rel:"noopener noreferrer"},x=e("em",null,"bridge.",-1),P=s('<p>To ensure that your add-on will work correctly you should generate two new UUID&#39;s which you will paste into the BP <code>manifest.json</code> file, at each <code>&quot;...&quot;</code>. When you are finished, it should look something like this:</p><p><code>&quot;uuid&quot;: &quot;5c830391-0937-44d6-9774-406de66b6984&quot;</code></p><h2 id="rp-manifest" tabindex="-1"><a class="header-anchor" href="#rp-manifest" aria-hidden="true">#</a> RP Manifest</h2><p>The next step is to create the <code>manifest.json</code> for the RP. The format for a resource-pack manifest is nearly identical to a BP manifests except that the <code>type</code> is <code>resources</code>, which marks the pack as a <em>Resource Pack</em>.</p><p>Copy the following code into your newly created <code>RP/manifest.json</code> and insert your own UUIDs.</p>',5),U=s(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;format_version&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;header&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pack.name&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pack.description&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;min_engine_version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;modules&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;resources&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pack-icon" tabindex="-1"><a class="header-anchor" href="#pack-icon" aria-hidden="true">#</a> Pack Icon</h2><p>The pack icon is an image file which identifies how your addon will look in-game. If you have a low-resolution square image, you can use it. Otherwise, download and use this example icon:</p><p>You should place a copy of your desired image into both the RP and the BP. The image needs to be named <code>pack_icon.png</code></p><h2 id="language-files" tabindex="-1"><a class="header-anchor" href="#language-files" aria-hidden="true">#</a> Language Files</h2>`,5),I={href:"/concepts/text-and-translations",target:"_blank",rel:"noopener noreferrer"},C=s(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>pack.name=Wiki Resource Pack
pack.description=A Ghostly Guide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),T=s(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>pack.name=Wiki Behavior Pack
pack.description=A Ghostly Guide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),R=s(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token string">&quot;en_US&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),W=s(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token string">&quot;en_US&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="checking-your-work" tabindex="-1"><a class="header-anchor" href="#checking-your-work" aria-hidden="true">#</a> Checking your Work</h2><p>If you have done everything correctly, your packs should show up in Minecraft now! If you don&#39;t see your pack, you should follow the <a href="./troubleshooting">troubleshooting guide.</a></p>`,3),M=e("h2",{id:"turn-on-content-log",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#turn-on-content-log","aria-hidden":"true"},"#"),n(" Turn on Content Log")],-1),B=e("div",{class:"custom-container warning"},[e("p",{class:"custom-container-title"},"WARNING"),e("p",null,"Content log is the most useful tool you have for debugging your addons. Please do not skip this step.")],-1),S=e("p",null,"Content Log is an extremely important debugging tool, which you should always have on.",-1),E=e("code",null,"settings > creator",-1),N=e("code",null,"ctrl+h",-1),A={href:"/guide/troubleshooting",target:"_blank",rel:"noopener noreferrer"},D=e("h2",{id:"creating-your-testing-world",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#creating-your-testing-world","aria-hidden":"true"},"#"),n(" Creating your testing world")],-1),V=e("p",null,"Now we create a world to test your new add-on!",-1),Y=e("ol",null,[e("li",null,[e("p",null,[n('Click "'),e("strong",null,"Create new world"),n('";')])]),e("li",null,[e("p",null,"Ensure that the following settings are set.")])],-1),L=s('<ol start="3"><li><p>Now activate your behavior pack, and your resource pack. You can do this by selecting the packs, and clicking &#39;apply&#39;.</p></li><li><p>Now click &#39;<strong>Create</strong>&#39;!</p></li></ol><hr><h2 id="your-progress-so-far" tabindex="-1"><a class="header-anchor" href="#your-progress-so-far" aria-hidden="true">#</a> Your progress so far</h2><p><strong>Here is how your project should look, after completing this page:</strong></p><p>Remember that in future, we will represent <code>com.mojang/development_behavior_packs/guide_RP/</code> as <code>RP</code>, and <code>com.mojang/development_behavior_packs/guide_BP/</code> as <code>BP</code>.</p><h2 id="what-you-have-learned" tabindex="-1"><a class="header-anchor" href="#what-you-have-learned" aria-hidden="true">#</a> What you have learned</h2><div class="custom-container tip"><p class="custom-container-title">What you have learned:</p><ul><li>What the com.mojang folder is, where it is and what folders it contains</li><li>How to setup your workspace</li><li>What a <code>manifest.json</code> file is</li><li>How to use UUIDs</li><li>How to create an icon for your addon</li><li>What a <code>.lang</code> file is</li></ul></div>',7);function G(F,H){const o=c("CodeHeader"),i=c("ExternalLinkIcon");return p(),d("div",null,[h,a(o,null,{default:t(()=>[n("BP/manifest.json")]),_:1}),m,e("ul",null,[k,e("li",null,[e("p",null,[n('"'),g,n('" is the name of your behavior pack. "'),f,n('" will show up under it in-game. We are defining these files in "code form" so we can translate them later into other languages. For more information about localization, look '),e("a",v,[n("here"),a(i)]),n(".")])]),b]),y,_,e("p",null,[w,n(" You can generate your own UUIDs "),e("a",q,[n("here"),a(i)]),n(" or, if you use VSCode, you can install "),e("a",j,[n("this"),a(i)]),n(" extension. Many other tools like "),x,n(" generate UUIDS automatically. Every manifest file uses two different UUIDs.")]),P,a(o,null,{default:t(()=>[n("RP/manifest.json")]),_:1}),U,e("p",null,[n("The last thing to do is setup language support for your addon. You will need to create a language file for both the RP and the BP. You can learn more about how Minecraft handles localization "),e("a",I,[n("here"),a(i)]),n(".")]),a(o,null,{default:t(()=>[n("RP/texts/en_US.lang")]),_:1}),C,a(o,null,{default:t(()=>[n("BP/texts/en_US.lang")]),_:1}),T,a(o,null,{default:t(()=>[n("RP/texts/languages.json")]),_:1}),R,a(o,null,{default:t(()=>[n("BP/texts/languages.json")]),_:1}),W,r(" ![](/assets/images/guide/project-setup/active_pack.png) "),M,B,r(" ![](/assets/images/guide/content_log.png) "),S,e("p",null,[n("Turn on both content log settings in "),E,n(". This will show you any errors in your add-on when you enter a world with it applied. You can also open the content log GUI in-game by pressing "),N,n(". Learn more about the content log "),e("a",A,[n("here"),a(i)]),n(".")]),D,V,Y,r(` ![](/assets/images/guide/project-setup/settings_1.png)
 ![](/assets/images/guide/project-setup/settings_2.png) `),L])}const z=l(u,[["render",G],["__file","project-setup.html.vue"]]);export{z as default};
